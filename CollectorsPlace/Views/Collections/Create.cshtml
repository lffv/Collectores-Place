@model CollectorsPlace.Models.RegisterCollectionModel

@{
    ViewBag.Title = "Create Collection";
}

<div class="home">

    <div class="home-left">
        
        @Html.Partial("_ProfileLeft", Model.Profile)
    
    </div>

    <div class="wrap-dir">

        <div class="home-direita-bar">

            <p>Tera Anuncios</p>

            <p>Ou Recomendacoes</p>

        </div>

        <div class="home-direita">

            <div class="header-home-direita">

                <p> <i class="icon-list"></i> Create Collection</p>
        
            </div>

            <div class="body-home-direita">

                @using (Html.BeginForm())
                {
                    @Html.ValidationSummary(true)

                    <div class="rule">

                        <div class="editor-row space">

                            <div class="imageArticle">
                                
                                <img src="~/Images/collections/noimage.jpg" title="imagemArt" class="imagem-article" id="artimg" />

                                <div class="alignImgBott">
                                    
                                    <input id="artupload" type="file" name="artupload">
                                
                                </div>
                            
                            </div>
                    
                            <div class="editor-row-inner">

                                @Html.LabelFor(model => model.Name)
                
                                @Html.EditorFor(model => model.Name)
                                @Html.ValidationMessageFor(model => model.Name)
                
                            </div>

                            <div class="editor-row-innerC">
                    
                                @Html.LabelFor(model => model.Description)

                                <div class="textwrap collec">
                    
                                    @Html.TextAreaFor(model => model.Description)
                                    @Html.ValidationMessageFor(model => model.Description)

                                </div>
                
                            </div>

                            </div>

                        <div class="editor-row space">
                    
                            <p class="tagH">Tags</p>
                
                        </div>
                
                        <div class="editor-row space">
                    
                            <ul id="tags">
                        
                                @if (ViewBag.tags != null) {
                            
                                    foreach (string s in ViewBag.tags)
                                    {
                                        <li>@s</li>
                                    }
                                }

                            </ul>
                    
                            @if(ViewBag.tags==null)
                            {
                                <span class="field-validation-error">Tags Empty</span>
                            }
                        </div>

                    </div>
                    
                    <div id="options">
                    
                        <button type="submit" class="botoes" value="Create">Create</button>
                
                    </div>
                    
                    @Html.Hidden("imgtmp")
                    
                }

            </div>

        </div>

    </div>

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @*@Scripts.Render("~/bundles/jqueryui")*@
    @Scripts.Render("~/bundles/tagit")
    @Scripts.Render("~/bundles/upload")
}

<script>

    $(document).ready(function () {

        var token = "@(Request.Cookies[FormsAuthentication.FormsCookieName]==null ? string.Empty : Request.Cookies[FormsAuthentication.FormsCookieName].Value)";
        var sessionId = "@Session.SessionID";

        $('#artupload').uploadify({
            auto: true,
            swf: "/Scripts/uploadify.swf",
            uploader: "/Collections/UploadImagesd/",
            multi: 'false',
            fileSizeLimit: '5MB',
            method: 'post',
            fileTypeExts: '*.jpg;*.jpeg;*.gif;*.png',
            fileTypeDesc: 'Image Files',
            buttonText: 'Choose Image',
            formData: { SessionId: sessionId, Token: token },
            onUploadSuccess: function (file, data, response) {
                var timestamp = new Date().getTime();
                $("#artimg").attr("src", data + "?" + timestamp); // -> Força um refresh da img
                $("#imgtmp").val(data);
}
        });

    });

</script>

