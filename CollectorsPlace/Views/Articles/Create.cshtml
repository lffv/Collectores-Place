@model CollectorsPlace.Models.RegisterArticlesModel

@{
    ViewBag.Title = "Create Article";
}

<div class="home">

    <div class="home-left">
        
        @Html.Partial("_ProfileLeft", Model.Profile)
    
    </div>

    <div class="wrap-dir">

        <div class="home-direita-bar">

            <p>Tera Anuncios</p>

            <p>Ou Recomendacoes</p>

        </div>

        <div class="home-direita">

            <div class="header-home-direita">
            
                <p><i class="icon-tags"></i>Create Article</p>
        
            </div>

            <div class="body-home-direita">

                <div class="rule">

                    @using (Html.BeginForm())
                    {
                    @Html.ValidationSummary(true)

                            <div class="editor-row space">
                        
                                <div class="imageArticle">
                                    
                                    <img src="~/Images/articles/noimage.jpg" title="imagemArt" class="imagem-article" id="artimg" />
                                
                                    <div class="alignImgBott">
                                        
                                        <input id="artupload" type="file" name="artupload">
                                        
                                </div>

                                </div>

                                <div class="editor-row-inner">
                        
                                    @Html.LabelFor(model => model.Name)
                        
                                    @Html.EditorFor(model => model.Name)
                                    @Html.ValidationMessageFor(model => model.Name)

                                </div>

                                <div class="editor-row-innerC">

                                    @Html.LabelFor(model => model.Description)
                                    
                                    <div class="textwrap">

                                        @Html.TextAreaFor(model => model.Description)
                                        @Html.ValidationMessageFor(model => model.Description)
                    
                                    </div>

                                </div>

                                <div class="editor-row-inner">
                                    
                                     <p class="check">
                                        
                                        <label for="bdvenda">Venda</label>
                                        <input type="checkbox" name="bdvenda" id="bdvenda" value="1" />
                                    
                                     </p>
                                    
                                    <p class="check">
                                        
                                        <label for="bdtroca">Troca</label>
                                        <input type="checkbox" name="bdtroca" id="bdtroca" value="1" />
                                    
                                    </p>
                                
                                </div>

                            </div>
                        
                            <div class="editor-model-Edit">
                                
                                <div class="tryCenter">

                                    <div class="editor-row">
                        
                                        @Html.LabelFor(model => model.AcquiredDate)

                                                    @Html.EditorFor(model => model.AcquiredDate, new {placeholder = "ACQUIRE DATE"})
                                        @Html.ValidationMessageFor(model => model.AcquiredDate)
                    
                                    </div>

                                    <div class="editor-row">

                                        @Html.LabelFor(model => model.EstimatedValue)

                                                    @Html.EditorFor(model => model.EstimatedValue, new {placeholder = "VALUE"})
                                        @Html.ValidationMessageFor(model => model.EstimatedValue)
                    
                                    </div>

                                    <div class="editor-row">
                            
                                        @Html.LabelFor(model => model.CollId, new {placeholder = "Collection"})
                    
                                        @Html.DropDownList("CollId", String.Empty)
                                        @Html.ValidationMessageFor(model => model.CollId)
                    
                                    </div>
                
                                </div>

                            </div>
                         
                
                            <div class="editor-row space">
                        
                                <p class="tagH">Tags</p>

                            </div>
                    
                            <div class="editor-row space">
                                
                                <ul id="tags">
                                    @if (ViewBag.tags != null) {
                                        foreach (string s in ViewBag.tags)
                                        {
                                            <li>@s</li>
                                        }
                                    }

                                </ul>
                                
                                @if(ViewBag.tags==null){
                                    <span class="field-validation-error">Tags Empty</span>
                                }

                            </div>
                        
                            <div id="options">

                                <button value="Create" class="botoes">Create</button>
                    
                            </div>  
                        
                      @Html.Hidden("imgtmp")
                        
                    }
                
                </div>

            </div>
        
        </div>

    </div>

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @*@Scripts.Render("~/bundles/jqueryui")*@
    @Scripts.Render("~/bundles/tagit")
    @Scripts.Render("~/bundles/upload")
}

<script>

    $(document).ready(function () {

        var token = "@(Request.Cookies[FormsAuthentication.FormsCookieName]==null ? string.Empty : Request.Cookies[FormsAuthentication.FormsCookieName].Value)";
        var sessionId = "@Session.SessionID";

        $('#artupload').uploadify({
            auto: true,
            swf: "/Scripts/uploadify.swf",
            uploader: "/Articles/UploadImagesd/",
            multi: 'false',
            fileSizeLimit: '5MB',
            method: 'post',
            fileTypeExts: '*.jpg;*.jpeg;*.gif;*.png',
            fileTypeDesc: 'Image Files',
            buttonText: 'Choose Image',
            formData: { SessionId: sessionId, Token: token },
            onUploadSuccess: function (file, data, response) {
                var timestamp = new Date().getTime();
                $("#artimg").attr("src", data + "?" + timestamp); // -> Força um refresh da img
                $("#imgtmp").val(data);
            }
        });

    });

</script>

